<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-21T17:09:52Z" name="Default suite" finished-at="2024-09-21T17:11:56Z" duration-ms="123182">
    <groups>
    </groups>
    <test started-at="2024-09-21T17:09:52Z" name="Default test" finished-at="2024-09-21T17:11:56Z" duration-ms="123182">
      <class name="com.task.GroceryTask">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:09:52Z" name="beforeClass" finished-at="2024-09-21T17:09:59Z" duration-ms="6903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:09:59Z" name="beforeMethod" finished-at="2024-09-21T17:09:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tc1()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:09:59Z" name="tc1" finished-at="2024-09-21T17:10:02Z" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:10:02Z" name="afterMethod" finished-at="2024-09-21T17:10:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:10:03Z" name="beforeMethod" finished-at="2024-09-21T17:10:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tc10()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:10:03Z" name="tc10" finished-at="2024-09-21T17:11:09Z" duration-ms="66191" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[text()='Order No: ']"}
  (Session info: chrome=128.0.6613.139)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1cb60e785e3adeb4d202379aff580986, findElement {using=xpath, value=//p[text()='Order No: ']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 128.0.6613.139, chrome: {chromedriverVersion: 128.0.6613.137 (fe621c5aa2d..., userDataDir: C:\Users\LENOVO\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61831/devtoo..., se:cdpVersion: 128.0.6613.139, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1cb60e785e3adeb4d202379aff580986]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[text()='Order No: ']"}
  (Session info: chrome=128.0.6613.139)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1cb60e785e3adeb4d202379aff580986, findElement {using=xpath, value=//p[text()='Order No: ']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 128.0.6613.139, chrome: {chromedriverVersion: 128.0.6613.137 (fe621c5aa2d..., userDataDir: C:\Users\LENOVO\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61831/devtoo..., se:cdpVersion: 128.0.6613.139, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1cb60e785e3adeb4d202379aff580986
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.tcs.BaseClass.findLocatorByXpath(BaseClass.java:260)
at com.task.GroceryTask.tc10(GroceryTask.java:176)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc10 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:09Z" name="afterMethod" finished-at="2024-09-21T17:11:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="tc2()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:09Z" name="tc2" finished-at="2024-09-21T17:11:14Z" duration-ms="4977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:09Z" name="beforeMethod" finished-at="2024-09-21T17:11:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:14Z" name="afterMethod" finished-at="2024-09-21T17:11:14Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:14Z" name="beforeMethod" finished-at="2024-09-21T17:11:14Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tc3()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:14Z" name="tc3" finished-at="2024-09-21T17:11:16Z" duration-ms="2365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:16Z" name="afterMethod" finished-at="2024-09-21T17:11:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:16Z" name="beforeMethod" finished-at="2024-09-21T17:11:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tc4()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:16Z" name="tc4" finished-at="2024-09-21T17:11:21Z" duration-ms="4989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:21Z" name="afterMethod" finished-at="2024-09-21T17:11:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="tc5()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:21Z" name="tc5" finished-at="2024-09-21T17:11:24Z" duration-ms="2915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:21Z" name="beforeMethod" finished-at="2024-09-21T17:11:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="afterMethod" finished-at="2024-09-21T17:11:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="tc6()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="tc6" finished-at="2024-09-21T17:11:24Z" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc6 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="beforeMethod" finished-at="2024-09-21T17:11:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="afterMethod" finished-at="2024-09-21T17:11:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="tc7()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="tc7" finished-at="2024-09-21T17:11:33Z" duration-ms="8982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc7 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:24Z" name="beforeMethod" finished-at="2024-09-21T17:11:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:33Z" name="afterMethod" finished-at="2024-09-21T17:11:33Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:33Z" name="beforeMethod" finished-at="2024-09-21T17:11:33Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tc8()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:33Z" name="tc8" finished-at="2024-09-21T17:11:52Z" duration-ms="18668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc8 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:52Z" name="afterMethod" finished-at="2024-09-21T17:11:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="tc9()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:52Z" name="tc9" finished-at="2024-09-21T17:11:56Z" duration-ms="3815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc9 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:52Z" name="beforeMethod" finished-at="2024-09-21T17:11:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:56Z" name="afterMethod" finished-at="2024-09-21T17:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.task.GroceryTask@291a7e3c]" started-at="2024-09-21T17:11:56Z" name="afterClass" finished-at="2024-09-21T17:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.task.GroceryTask -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
